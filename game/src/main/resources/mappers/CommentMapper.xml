<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.game.mapper.CommentMapper">

<sql id = "commentColumns">
  comm_num
, board_num
, mem_id
, comm_contents
, comm_update_date
, comm_update_id
, comm_delete
, comm_date

</sql>

<sql id = "search">
  <!-- 검색 키워드가 있을 때 -->
        <if test="searchKeyword != null and searchKeyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                and 
                    <choose>
                        <when test="'title'.equals(searchType)">
                        <![CDATA[
                             b.board_title LIKE '%' || #{searchKeyword} || '%'
                        ]]>
                        </when>
                        <when test="'content'.equals(searchType)">
                        <![CDATA[
                             c.comm_contents LIKE '%' || #{searchKeyword} || '%' 
                        ]]>
                        </when>
                        
                    </choose>
                </when>
                <!-- 검색 유형이 없을 때 -->
                <otherwise>
                    <![CDATA[
                           and b.board_title LIKE '%' || #{searchKeyword} || '%'
                            OR c.comm_contents LIKE '%' || #{searchKeyword} || '%'
                     ]]>
                </otherwise>
            </choose>
        </if>

</sql>

<sql id = "commsearch">
  <!-- 검색 키워드가 있을 때 -->
        <if test="searchKeyword != null and searchKeyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                
                    <choose>
                        <when test="'writer'.equals(searchType)">
                        <![CDATA[
                          and    m.mem_nick LIKE '%' || #{searchKeyword} || '%'
                        ]]>
                        </when>
                        
                        <when test="'title'.equals(searchType)">
                        <![CDATA[
                           and   b.board_title LIKE '%' || #{searchKeyword} || '%'
                        ]]>
                        </when>
                        <when test="'contents'.equals(searchType)">
                        <![CDATA[
                           and   c.comm_contents LIKE '%' || #{searchKeyword} || '%' 
                        ]]>
                        </when>
                        
                    </choose>
                </when>
                <!-- 검색 유형이 없을 때 -->
                <otherwise>
                    <![CDATA[
                           and  m.mem_nick LIKE '%' || #{searchKeyword} || '%' 
                            OR b.board_title LIKE '%' || #{searchKeyword} || '%'
                            OR c.comm_contents LIKE '%' || #{searchKeyword} || '%'
                     ]]>
                </otherwise>
            </choose>
        </if>

</sql>

<!-- 특정 게시글의 모든 댓글 목록 조회  -->
<select id="selectCommentList" parameterType="CommentDTO" resultType="CommentDTO">
select comm.* from
(select rownum rno ,a.* from (select 
    c.comm_num
    , c.comm_contents
    , c.comm_date
    , m.mem_nick
    , b.board_num
    , b.board_title
    , b.board_type
from comment_table c 
  left outer join board_table b on c.board_num=b.board_num
  left outer join member_table m on c.mem_id=m.mem_id
where 
    c.comm_delete = 'N'
    <if test="boardNum != null">and b.board_num = #{boardNum}</if>
    <include refid="commsearch" />
order by comm_date asc)a)comm
where
comm.rno between #{startPage} and #{endPage}
</select>

<!-- 특정 게시그에 포함된 댓글 개수 조회 -->
<select id="selectCommentTotalCount" parameterType="CommentDTO" resultType="int">

select 
    count(*)
from 
comment_table c left outer join board_table b on c.board_num = b.board_num
left outer join member_table m on b.mem_id = m.mem_id 
where c.comm_delete='N'
<if test ="boardNum != null"> and b.board_num = #{boardNum}</if>
<include refid="commsearch" />

</select>

<!-- 내 댓글 검색 -->
<select id="selectMyComment" parameterType="CommentDTO" resultType="CommentDTO">
<!-- 전체 검색시 문제 있는 쿼리임 -->
<!-- SELECT b.* FROM (SELECT rownum rno,a.*  -->
<!-- FROM ( -->
<!-- SELECT board_table.board_title, comm_contents, comm_date,board_table.board_num,board_table.board_type, comment_table.mem_id, comment_table.comm_num, comment_table.comm_delete   -->
<!-- FROM comment_table, board_table -->
<!-- WHERE board_table.board_num = comment_table.board_num  AND comment_table.comm_delete='N' -->
<!-- <include refid="search" /> -->
<!-- ORDER BY comm_date desc)a where a.mem_id = #{memId})b where rno between #{startPage} and #{endPage} -->

SELECT * FROM (
	SELECT
	   rownum rno, board_title, comm_contents, comm_date, b.board_num, board_type, c.mem_id, comm_num, comm_delete  
	FROM comment_table c
	    left outer join board_table b on c.board_num=b.board_num
	WHERE comm_delete='N' and c.mem_id=#{memId}         
	       <include refid="search" />
	ORDER BY comm_date desc)
WHERE rno between #{startPage} and #{endPage}
</select>

<select id="selectMyCommentCount" parameterType="CommentDTO" resultType="int">
    
SELECT count(*) 
FROM comment_table c, board_table b 
WHERE b.board_num = c.board_num 
    AND c.mem_id = #{memId} AND c.comm_delete='N'
ORDER BY comm_date desc

</select>

<!--댓글 등록  -->
<insert id="insertComment" parameterType="CommentDTO">
insert into comment_table (
 <include refid="commentColumns" />
) values (
  'c_' || sequ_comment_num.nextval
  ,#{boardNum}
  ,#{memId}
  ,#{commContents} 
  ,null
  ,null
  ,'N'
  ,sysdate
)
</insert>


<!-- 특정한 댓글 보기 -->
<select id="selectCommentDetail" parameterType="String" resultType="CommentDTO">
select 
    comm_num 
    , comm_contents
    , mem_nick
    , comm_delete 
    , comm_date
from comment_table
    , member_table 
where member_table.mem_id = comment_table.mem_id 
and comm_delete = 'N'
and comment_table.comm_num=#{commNum}

</select>



<!-- 댓글 수정 -->
<update id="updateComment" parameterType="CommentDTO">
update 
comment_table 
set 
    comm_contents = #{commContents} 
where 
    comm_num =#{commNum} 
and 
    mem_id=#{memId}

</update>


<!-- 댓글 삭제 -->
<update id="deleteComment" parameterType="CommentDTO">
update 
comment_table 
set 
    comm_delete= 'Y', comm_update_date=sysdate, comm_update_id=#{commUpdateId} 
where 
    comm_num in
	      <foreach collection="commNumArr" item="item" open="(" close=")" separator=",">
	          #{item}
	      </foreach>
        <if test='memRole != "admin"'> <!-- 관리자가 아닐 때 로그인 게정과 글작성자 비교한 조건문 추가 -->
             AND mem_id = #{commUpdateId}
        </if>

</update>








</mapper>